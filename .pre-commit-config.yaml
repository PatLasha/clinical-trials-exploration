repos:
  # Basic file hygiene
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: 4.3.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files

  # Black format checker
  - repo: https://github.com/psf/black
    rev: 25.9.0 # Use the same version as in requirements-dev.txt
    hooks:
      - id: black
        name: black-format-checker
        description: "Check Python code formatting using Black"
        language_version: python3.12

  # isort import sorter
  - repo: https://github.com/pre-commit/mirrors-isort
    rev: 7.0.0 # Use the same version as in requirements-dev.txt
    hooks:
      - id: isort
        name: isort-import-sorter
        description: "Sort Python imports using isort"
        args: ["--profile", "black", "--line-length", "120"]
        language_version: python3.12

  # Flake8 linter
  - repo: https://gitlab.com/pycqa/flake8
    rev: 7.3.0 # Use the same version as in requirements-dev.txt
    hooks:
      - id: flake8
        args: [
          "--max-line-length=120", # To be consistent with chosen line length
          "--extend-ignore=E203,W503" # To be consistent with Black formatting
        ]
        name: flake8-linter
        description: "Lint Python code with Flake8"
        language_version: python3.12

  # Custom hook to run tests with coverage
  - repo: local
    hooks:
      - id: tests-with-coverage
        name: Run tests with coverage
        description: "Run the test suite and measure code coverage"
        # this part is generated by github copilot
        entry: bash -c 'if [ -d "tests" ] && [ "$(find tests -name "*.py" -not -name "__*" | wc -l)" -gt 0 ]; then python -m pytest tests/ --cov=. --cov-report=term-missing; else echo "No tests found, skipping"; fi'
        language: system
        types: [python]
        always_run: true
        stages: [commit]